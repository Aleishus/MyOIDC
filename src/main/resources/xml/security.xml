<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd


                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-4.0.xsd http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--<debug/>-->

    <!--static url pattern-->
    <!--<http pattern="/static/**" security="none"/>-->
    <!--&lt;!&ndash;Ignore /test,  /public &ndash;&gt;-->
    <!--<http pattern="/public/**" security="none"/>-->


    <!--&lt;!&ndash;<mvc:annotation-driven/>&ndash;&gt;-->
    <!--<mvc:annotation-driven validator="webGlobalValidator"/>-->
    <!--<mvc:default-servlet-handler/>-->


    <!--<http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="oauth2AuthenticationManager"-->
    <!--entry-point-ref="oauth2AuthenticationEntryPoint" use-expressions="false">-->
    <!--<intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>-->
    <!--<anonymous enabled="false"/>-->
    <!--<http-basic entry-point-ref="oauth2AuthenticationEntryPoint"/>-->

    <!--<custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER"/>-->
    <!--<access-denied-handler ref="oauth2AccessDeniedHandler"/>-->
    <!--<csrf disabled="true"/>-->
    <!--</http>-->


    <!--<beans:bean id="clientCredentialsTokenEndpointFilter"-->
    <!--class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">-->
    <!--<beans:property name="authenticationManager" ref="oauth2AuthenticationManager"/>-->
    <!--</beans:bean>-->


    <!--&lt;!&ndash;RP API  configuration&ndash;&gt;-->
    <!--<http pattern="/api/rp/**" create-session="never" entry-point-ref="oauth2AuthenticationEntryPoint"-->
    <!--access-decision-manager-ref="oauth2AccessDecisionManager" use-expressions="false">-->
    <!--<anonymous enabled="false"/>-->

    <!--<intercept-url pattern="/api/rp/**" access="ROLE_OAUTH_RP,SCOPE_READ"/>-->

    <!--<custom-filter ref="rpResourceServer" before="PRE_AUTH_FILTER"/>-->
    <!--<access-denied-handler ref="oauth2AccessDeniedHandler"/>-->
    <!--<csrf disabled="true"/>-->
    <!--</http>-->


    <!--&lt;!&ndash;RP resource server filter&ndash;&gt;-->
    <!--<oauth2:resource-server id="rpResourceServer" resource-id="rp-resource"-->
    <!--token-services-ref="tokenServices"/>-->


    <!--&lt;!&ndash;Config ClientDetailsService&ndash;&gt;-->
    <!--<beans:bean id="clientDetailsService" class="myoidc.oauth.service.oauth.MongoClientDetailsService">-->
    <!--<beans:property name="oauthRepository" ref="oauthClientRepositoryMongoDB"/>-->
    <!--</beans:bean>-->


    <!--&lt;!&ndash;Config token services&ndash;&gt;-->
    <!--<beans:bean id="tokenStore" class="myoidc.oauth.service.oauth.MongoTokenStore">-->
    <!--<beans:property name="tokenRepository" ref="accessTokenRepositoryMongoDB"/>-->
    <!--</beans:bean>-->


    <!--<beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">-->
    <!--<beans:property name="tokenStore" ref="tokenStore"/>-->
    <!--<beans:property name="clientDetailsService" ref="clientDetailsService"/>-->
    <!--<beans:property name="supportRefreshToken" value="true"/>-->
    <!--&lt;!&ndash;<beans:property name="accessTokenValiditySeconds" value="2592000"/>&ndash;&gt;-->
    <!--</beans:bean>-->

    <!--&lt;!&ndash;<global-method-security pre-post-annotations="enabled" proxy-target-class="true">&ndash;&gt;-->
    <!--&lt;!&ndash;<expression-handler ref="oauth2ExpressionHandler"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</global-method-security>&ndash;&gt;-->

    <!--&lt;!&ndash;<oauth2:expression-handler id="oauth2ExpressionHandler"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<oauth2:web-expression-handler id="oauth2WebExpressionHandler"/>&ndash;&gt;-->

    <!--<beans:bean class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory"-->
    <!--id="oAuth2RequestFactory">-->
    <!--<beans:constructor-arg name="clientDetailsService" ref="clientDetailsService"/>-->
    <!--</beans:bean>-->

    <!--<beans:bean id="oauthUserApprovalHandler"-->
    <!--class="myoidc.oauth.infrastructure.oauth.OauthUserApprovalHandler">-->
    <!--<beans:property name="tokenStore" ref="tokenStore"/>-->
    <!--<beans:property name="clientDetailsService" ref="clientDetailsService"/>-->
    <!--<beans:property name="requestFactory" ref="oAuth2RequestFactory"/>-->
    <!--<beans:property name="oauthService" ref="oauthService"/>-->
    <!--</beans:bean>-->


    <!--<beans:bean id="authorizationCodeServices"-->
    <!--class="myoidc.oauth.service.oauth.MongoAuthorizationCodeServices">-->
    <!--<beans:property name="oauthRepository" ref="oauthClientRepositoryMongoDB"/>-->
    <!--</beans:bean>-->


    <!--<oauth2:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"-->
    <!--user-approval-handler-ref="oauthUserApprovalHandler"-->
    <!--user-approval-page="oauth_approval"-->
    <!--error-page="oauth_error">-->
    <!--<oauth2:authorization-code authorization-code-services-ref="authorizationCodeServices" disabled="true"/>-->
    <!--<oauth2:implicit disabled="true"/>-->
    <!--<oauth2:refresh-token/>-->
    <!--<oauth2:client-credentials/>-->
    <!--&lt;!&ndash;<oauth2:password authentication-manager-ref="authenticationManagerIDs"/>&ndash;&gt;-->
    <!--<oauth2:password/>-->
    <!--</oauth2:authorization-server>-->


    <!--&lt;!&ndash;<authentication-manager id="authenticationManagerIDs">&ndash;&gt;-->
    <!--&lt;!&ndash;<authentication-provider user-service-ref="userAPIService">&ndash;&gt;-->
    <!--&lt;!&ndash;<password-encoder hash="sha-256">&ndash;&gt;-->
    <!--&lt;!&ndash;<salt-source system-wide="ids"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</password-encoder>&ndash;&gt;-->
    <!--&lt;!&ndash;</authentication-provider>&ndash;&gt;-->
    <!--&lt;!&ndash;</authentication-manager>&ndash;&gt;-->


    <!--<beans:bean id="oauth2AuthenticationEntryPoint"-->
    <!--class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>-->


    <!--<beans:bean id="oauth2ClientDetailsUserService"-->
    <!--class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">-->
    <!--<beans:constructor-arg ref="clientDetailsService"/>-->
    <!--</beans:bean>-->

    <!--<authentication-manager id="oauth2AuthenticationManager">-->
    <!--<authentication-provider user-service-ref="oauth2ClientDetailsUserService"/>-->
    <!--</authentication-manager>-->

    <!--<beans:bean id="oauth2AccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">-->
    <!--<beans:constructor-arg>-->
    <!--<beans:list>-->
    <!--<beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>-->
    <!--<beans:bean class="org.springframework.security.access.vote.RoleVoter"/>-->
    <!--<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>-->
    <!--</beans:list>-->
    <!--</beans:constructor-arg>-->
    <!--</beans:bean>-->


    <!--<beans:bean id="oauth2AccessDeniedHandler"-->
    <!--class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>-->


    <!--<http use-expressions="false" authentication-manager-ref="authenticationManager">-->
    <!--<intercept-url pattern="/oauth/**" access="ROLE_OAUTH"/>-->

    <!--&lt;!&ndash;<intercept-url pattern="/system/user/**" access="ROLE_SYSTEM_ACCOUNT"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<intercept-url pattern="/system/setting/**" access="ROLE_SYSTEM_SETTING"/>&ndash;&gt;-->


    <!--&lt;!&ndash;Ignore login&ndash;&gt;-->
    <!--<intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->

    <!--<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY"/>-->

    <!--<form-login authentication-failure-url="/login?authentication_error=1"-->
    <!--login-page="/login" login-processing-url="/signin"/>-->
    <!--<logout logout-success-url="/index" logout-url="/signout" delete-cookies="JSESSIONID"/>-->
    <!--<anonymous/>-->
    <!--<access-denied-handler error-page="/login?authorization_error=2"/>-->
    <!--&lt;!&ndash;<csrf disabled="true"/>&ndash;&gt;-->
    <!--</http>-->


    <!--<authentication-manager alias="authenticationManager">-->
    <!--<authentication-provider user-service-ref="userService">-->
    <!--<password-encoder hash="sha-256">-->
    <!--<salt-source user-property="username"/>-->
    <!--</password-encoder>-->
    <!--</authentication-provider>-->
    <!--</authentication-manager>-->

    <!--&lt;!&ndash;Support spring security tag on jsp&ndash;&gt;-->
    <!--<beans:bean class="org.springframework.security.oauth2.provider.expression.OAuth2WebSecurityExpressionHandler"-->
    <!--id="securityExpressionHandler"/>-->

    <!--&lt;!&ndash;-->
    <!--Oauth server end.............-->
    <!--&ndash;&gt;-->

    <!--<beans:bean class="myoidc.oauth.domain.security.SecurityUtils">-->
    <!--<beans:property name="securityHolder">-->
    <!--<beans:bean class="myoidc.oauth.domain.security.SpringSecurityHolder"/>-->
    <!--</beans:property>-->
    <!--</beans:bean>-->


</beans:beans>